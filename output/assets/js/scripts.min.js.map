{"version":3,"sources":["scripts.js"],"names":["document","addEventListener","expandMenu","target","console","log","querySelector","classList","toggle","setTopic","selection","innerText","setTopicHeader","topicData","topicPosition","setDescription","spot","innerHTML","populateTopic","length","topicList","i","menuItems","querySelectorAll","setAttribute","onclick","this","getAttribute","startQuiz","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","quizBody","responseText","progressCounter","modalGenerator","endQuizMessage","nextQuestion","userAnswer","value","rightAnswer","score","errorGenerator","textStrings","pleaseAnswer","setProgressFieldValue","open","send","updateProgressCounter","scoreMessage","final","Number","returnToMain","location","reload","message","newDiv","createElement","add","appendChild","setTimeout","removeChild","actionOne","actionTwo","divClass","selectTopic","JSON","parse","doAjax","event","preventDefault","id"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict'; // no sloppy JS habits allowed here.\ndocument.addEventListener('DOMContentLoaded', function(){\n\tvar topicData; // empty var to hold question JSON\n\tvar topicPosition;\n\tvar progressCounter = 0; // track number of questions asked\n\tvar score = 0; // track user's score\n\tvar endQuizMessage = 'Are you sure you want to end your quiz?';\n\tvar final = null;\n\tvar textStrings = {\n\t\t'selectTopic' : 'Please select a topic.',\n\t\t'pleaseAnswer' : 'At least try and answer the question, alright?'\n\t}\n\n\t// load questions and topics as soon as the page is ready\n\tfunction doAjax() {\n\t\tvar xmlhttp = new XMLHttpRequest();\n\t\tvar url = 'assets/data/topics.json';\n\n\t\txmlhttp.onreadystatechange = function() {\n\t\tif (this.readyState == 4 && this.status == 200) {\n    \t\ttopicData = JSON.parse(this.responseText);\n    \t\tconsole.log(\"Topic data, Morty\")\n    \t\tconsole.log(topicData);\n    \t\tpopulateTopic();\n    \t}\n    }\n    xmlhttp.open('GET', url, true);\n    xmlhttp.send();\n\t}\n\tdoAjax();\n\n\tfunction watchSelectMenu(){\n\t\t// open select menu\n\t\tdocument.querySelector(\"#topicMenu\").addEventListener(\"click\", function(event){\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log(\"You clicked\",this.id);\n\t\t\texpandMenu(this.id);\n\t\t});\n\n\t}\n\twatchSelectMenu();\n\n\t// when button is clicked, toggle visibility of menu items\n\tfunction expandMenu(target) {\n\t\tconsole.log(\"I am inside expandMenu\");\n\t\tconsole.log(\"#\"+target+\".dropdownList\");\n\t\tdocument.querySelector(\"#\"+target+\"+.dropdownList\").classList.toggle(\"show\");\n\n\t\t/*\n\t\tright now the menu stays open. This is as far as I got towards making it close when you click on the BG\n\t\tif (!event.target.matches(\"#\"+target+\".dropdownList a\")){\n\t\t\tdocument.querySelector(\"#\"+target+\"+.dropdownList\").classList.toggle(\"show\");\n\t\t\tconsole.log(\"make it close now\");\n\t\t}\n\t\t*/\n\n\t\t/* second try\n\t\tfor (var i = 0; i < menuItems.length; i++) {\n\t\t\tmenuItems[i].onclick = function(){\n\t\t\t\tconsole.log(\"I was clicked \"+this.innerHTML);\n\t\t\t}\n\t\t}\n\t\t*/\n\n\t\t// third try. Close if click is anythere outside the button\n\t\t// window.onclick = function(event){\n\t\t// \t// how can I have it match a click on 'this'?\n\t\t// \tif (!event.target.matches('button')){\n\t\t// \t\tdocument.querySelector(\"#\"+target+\"+.dropdownList\").classList.toggle(\"show\");\n\t\t// \t}\n\t\t// }\n\t} // end expandMenu\n\n\t// set homepage topic menu header from JSON when menu item is selected\n\tfunction setTopic(selection) {\n\t\tconsole.log(selection);\n\t\tdocument.querySelector(\"#topicMenu\").innerText = selection;\n\t\tdocument.querySelector(\"#topicMenu + .dropdownList\").classList.toggle(\"show\");\n\t\t//console.log(\"you clicked \"+selection.innerHTML);\n\t}\n\n\t// set topic name on active quiz page\n\tfunction setTopicHeader() {\n\t\tdocument.querySelector('.topic').innerText = topicData[topicPosition]['name'];\n\t}\n\n\t// set description contents from JSON when menu item is selected\n\tfunction setDescription(spot) {\n\t\tconsole.log('this is spot', spot);\n\t\tdocument.querySelector(\"#topicRow .lowerBox\").innerHTML = topicData[spot]['description'];\n\t}\n\n\t// load topic items from JSON file\n\tfunction populateTopic() {\n\t\tconsole.log(\"this is how long topic data is\",topicData.length);\n\t\tvar topicList = '';\n\t\tvar linkOpen = '<a>';\n\t\tvar linkClose = '</a>'\n\t\tfor (var i = 0; i < topicData.length; i++) {\n\t\t\ttopicList += linkOpen + topicData[i][\"name\"] + linkClose;\n\t\t}\n\t\tdocument.querySelector(\"#topicList\").innerHTML = topicList;\n\n\t\tvar menuItems = document.querySelectorAll(\".dropdownList a\");\n\t\tconsole.log(menuItems.length,'length of menuItems');\n\t\tfor (var i = 0; i < menuItems.length; i++) {\n\t\t\t// Creates an attribute to track order. Sets it to current loop iteration value\n\t\t\tmenuItems[i].setAttribute('order', i);\n\t\t\t// onclick function for every menuItem link\n\t\t\tmenuItems[i].onclick = function(){\n\t\t\t// sends topic name to the button value\n\t\t\tsetTopic(this.innerHTML);\n\t\t\t// sends order position to description function. This pulls the corresponding description from the JSON\n\t\t\ttopicPosition = this.getAttribute('order');\n\t\t\tsetDescription(topicPosition);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction watchQuiz(){\n\t\t// start quiz when button is pressed\n\t\tdocument.querySelector('.start').addEventListener('click', function() {\n\t\t\tconsole.log(\"You pressed start\");\n\t\t\tconsole.log(document.querySelector('#topicMenu').innerText);\n\t\t\tvar topicVar = document.querySelector('#topicMenu').innerText;\n\t\t\tif (topicVar == 'Choose One') {\n\t\t\t\tconsole.log('no value!');\n\t\t\t\terrorGenerator(textStrings.selectTopic);\n\t\t\t} else {\n\t\t\t\tstartQuiz();\n\t\t\t}\n\t\t});\n\t}\n\twatchQuiz();\n\n\t// grab quiz page body\n\tfunction startQuiz(){\n\t\t// load quiz screen via AJAX\n\t\tvar xmlhttp = new XMLHttpRequest();\n\t\tvar url = 'assets/data/questionScreen.html';\n\n\t\txmlhttp.onreadystatechange = function() {\n\t\t\tif (this.readyState == 4 && this.status == 200) {\n\t    \t\tvar quizBody = this.responseText;\n\t    \t\tdocument.querySelector('.container').innerHTML = quizBody;\n\n\t    \t\t// set topic name\n\t    \t\tsetTopicHeader();\n\t    \t\t// set category name\n\t\t\t\t// progress counter\n\n\t\t\t\tconsole.log('AJAX request. Progress counter is ' + progressCounter);\n\t\t\t\t// prefill question one from current topic data\n\t\t\t\tdocument.querySelector('.questionHolder').innerHTML = topicData[topicPosition]['questions'][0]['question'];\n\n\t\t\t\t// close button\n\t\t\t\tdocument.querySelector('.close').addEventListener('click', function(){\n\t\t\t\t\t// future: make prompt function. Pass confirm box into it. Have confirm box call main screen function\n\t\t\t\t\tconsole.log('close was pressed');\n\t\t\t\t\tmodalGenerator(endQuizMessage, 'yes', 'no');\n\t\t\t\t});\n\n\t\t\t\tdocument.querySelector('.hint').addEventListener('click', function(){\n\t\t\t\t\tconsole.log('hint clicked');\n\t\t\t\t\tconsole.log('progress counter inside hint is', progressCounter);\n\t\t\t\t\tmodalGenerator(topicData[topicPosition]['questions'][progressCounter]['hint'], 'yes');\n\t\t\t\t});\n\n\t\t\t\tdocument.querySelector('.skip').addEventListener('click', function(){\n\t\t\t\t\tnextQuestion();\n\t\t\t\t});\n\n\t\t\t\tdocument.querySelector('.answer').addEventListener('click', function(){\n\t\t\t\t\tconsole.log('you ask, I answer');\n\t\t\t\t\tconsole.log('topic position is ' + topicPosition);\n\t\t\t\t\tconsole.log('progress counter is ' + progressCounter);\n\t\t\t\t\t// show modal if there's a value in textarea\n\t\t\t\t\tvar userAnswer = document.querySelector('#answerRow textarea').value;\n\t\t\t\t\tvar rightAnswer = topicData[topicPosition]['questions'][(progressCounter)]['answer'];\n\t\t\t\t\tconsole.log('user answer: ' + userAnswer);\n\t\t\t\t\tif (userAnswer != '') {\n\t\t\t\t\t\t// modalGenerator(topicData[topicPosition]['questions'][(progressCounter)]['answer'], 'okay');\n\t\t\t\t\t\t// see if user input matches real answer\n\t\t\t\t\t\tfunction checkAnswer(){\n\t\t\t\t\t\t\tif (userAnswer == rightAnswer) {\n\t\t\t\t\t\t\t\tconsole.log('right answer');\n\t\t\t\t\t\t\t\tconsole.log('Correct, the answer is ' + rightAnswer);\n\t\t\t\t\t\t\t\tmodalGenerator('Correct, the answer is ' + rightAnswer, 'Continue');\n\t\t\t\t\t\t\t\t//updateProgressCounter();\n\t\t\t\t\t\t\t\tscore++;\n\t\t\t\t\t\t\t\t// nextQuestion();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.log('wrong answer');\n\t\t\t\t\t\t\t\tmodalGenerator('Sorry, the answer is ' + rightAnswer, 'Continue');\n\t\t\t\t\t\t\t\t//updateProgressCounter();\n\t\t\t\t\t\t\t\t// nextQuestion();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcheckAnswer();\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorGenerator(textStrings.pleaseAnswer);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetProgressFieldValue();\n\t    }\n\t    xmlhttp.open('GET', url, true);\n\t    xmlhttp.send();\n\n\t} // end quiz\n\n\tfunction nextQuestion() {\n\t\t// keep score the same\n\t\t// show new question\n\t\tconsole.log('showing next question');\n\n\t\tif(progressCounter < topicData[topicPosition]['questions'].length) {\n\t\t\tupdateProgressCounter();\n\t\t\t// document.querySelector('.questionHolder').innerHTML = topicData[topicPosition]['questions'][progressCounter]['question'];\n\t\t\t// console.log('this should be a new question',topicData[topicPosition]['questions'][progressCounter]['question']);\n\t\t} else if (progressCounter == topicData[topicPosition]['questions'].length) {\n\t\t\tconsole.log('next question report: game over');\n\t\t\tupdateProgressCounter();\n\t\t}\n\t\tconsole.log('progress counter',progressCounter);\n\n\n\t\t// write end scenario for when final question is reached\n\n\t}\n\n\t// update progress and score\n\tfunction updateProgressCounter() {\n\t\tconsole.log('number of questions ' + topicData[topicPosition]['questions'].length);\n\t\tif(progressCounter < topicData[topicPosition]['questions'].length) {\n\t\t\tprogressCounter++;\n\t\t\tif (progressCounter <= topicData[topicPosition]['questions'].length - 1){\n\t\t\t\tconsole.log('new value for progressCounter: ' + progressCounter);\n\t\t\t\tdocument.querySelector('.questionHolder').innerHTML = topicData[topicPosition]['questions'][progressCounter]['question'];\n\t\t\t\tconsole.log('this should be a new question',topicData[topicPosition]['questions'][progressCounter]['question']);\n\t\t\t\tsetProgressFieldValue();\n\t\t\t}\n\n\n\t\t} if (progressCounter == topicData[topicPosition]['questions'].length) {\n\t\t\tconsole.log('Progress report: game over');\n\t\t\t//setProgressFieldValue();\n\t\t\t// score here\n\t\t\tvar scoreMessage = '<h2>Game Over</h2>' + 'Topic: ' + topicData[topicPosition]['name']\n\t\t\t\t+ '<br>Category: ... Coming Soon <br>'\n\t\t\t\t+ '<strong>Score</strong>: ' + score + ' out of ' + topicData[topicPosition]['questions'].length;\n\t\t\tfinal = true;\n\t\t\tconsole.log('this is final' + final);\n\t\t\tmodalGenerator(scoreMessage, 'Continue'); // 3rd var for desitnation?\n\t\t}\n\n\t}\n\n\t// update progress field contents\n\tfunction setProgressFieldValue() {\n\t\t// update counter at top of page\n\t\tif (document.querySelector('.progress')) {\n\t\t\tdocument.querySelector('.progress').innerHTML = 'Progress: ' + (Number(progressCounter) + 1) + ' / ' + topicData[topicPosition]['questions'].length;\n\t\t}\n\t\t// clear the answer textarea\n\t\tif(document.querySelector('#answerRow textarea')){\n\t\t\tdocument.querySelector('#answerRow textarea').value = '';\n\t\t}\n\t}\n\n\tfunction returnToMain() {\n\t\tlocation.reload();\n\t\t// I need to do this properly or not at all...\n\t\t/*\n\t\tprogressCounter = 1;\n\n\t\t// load quiz screen via AJAX\n\t\tvar xmlhttp = new XMLHttpRequest();\n\t\tvar url = 'index.html';\n\n\t\txmlhttp.onreadystatechange = function() {\n\t\t\tif (this.readyState == 4 && this.status == 200) {\n\t    \t\tvar wholePage = this.responseText;\n\t    \t\tconsole.log('start fresh...');\n\t    \t\tconsole.log(wholePage,'here is my container');\n\t    \t\tdocument.write(wholePage);\n\t    \t\t//document.close();\n\t    \t\t// future: there has to be a better way than this. I'm re-calling each eventlistener when I load page contents. :-(\n\t    \t\tdoAjax();\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t//console.log('delay before hiding');\n\t\t\t\t\twatchSelectMenu();\n\t\t\t\t\twatchQuiz();\n\t\t\t\t}, 1000);\n\t\t\t}\n\t    }\n\t    xmlhttp.open('GET', url, true);\n\t    xmlhttp.send();\n\n\t    */\n\t}\n\n\tfunction errorGenerator(message) {\n\t\tvar divClass = 'errorBox';\n\t\tvar newDiv = document.createElement('div'); // create div element\n\t\tnewDiv.classList.add(divClass); // apply class for manipulation & styling\n\t\tnewDiv.innerText = message; // apply message var as content of new div\n\t\t//console.log(newDiv);\n\t\tdocument.querySelector('.container').appendChild(newDiv); // render div at bottom of container\n\t\t// delete error after 10 seconds\n\t\tsetTimeout(function() {\n\t    \tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t    }, 5000);\n\t}\n/*\n\tfunction modalGenerator(message, action) {\n\t\tvar divClass = 'messageBox';\n\t\tvar newDiv = document.createElement('div'); // create div element\n\t\tnewDiv.classList.add(divClass); // apply class for manipulation & styling\n\t\t//newDiv.innerText = message; // apply message var as content of new div\n\t\tnewDiv.innerHTML = message + '<div class=\\'yes\\'>Yes</div><div class=\\'no\\'>No</div>';\n\t\t//console.log(newDiv);\n\t\tdocument.querySelector('.container').appendChild(newDiv); // render div at bottom of container\n\n\t\tdocument.querySelector('.' + divClass +' .yes').addEventListener('click', function(){\n\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\tconsole.log('now I\\'m returning home');\n\t\t\t//action;\n\t\t\treturnToMain();\n\t\t});\n\t\tdocument.querySelector('.' + divClass + ' .no').addEventListener('click', function(){\n\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t});\n\t}\n*/\n\tfunction modalGenerator(message, actionOne, actionTwo) {\n\t\tvar divClass = 'messageBox';\n\t\tvar newDiv = document.createElement('div'); // create div element\n\t\tnewDiv.classList.add(divClass); // apply class for manipulation & styling\n\t\t//newDiv.innerText = message; // apply message var as content of new div\n\t\tif (actionTwo) {\n\t\t\tnewDiv.innerHTML = '<div class=\\'inner\\'><div class=\\'row pad\\'>' + message + '</div> <button class=\\'yes\\'>Yes</button><button class=\\'no\\'>No</button></div>';\n\t\t\t//console.log(newDiv);\n\t\t\tdocument.querySelector('.container').appendChild(newDiv); // render div at bottom of container\n\t\t\tconsole.log('queryselector: ' + '.' + divClass +' .yes');\n\t\t\tdocument.querySelector('.' + divClass +' .yes').addEventListener('click', function(){\n\t\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\t\tconsole.log('now I\\'m returning home');\n\t\t\t\t//action;\n\t\t\t\treturnToMain();\n\t\t\t});\n\t\t\tdocument.querySelector('.' + divClass + ' .no').addEventListener('click', function(){\n\t\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\t});\n\t\t} else {\n\t\t\tnewDiv.innerHTML = '<div class=\\'inner\\'><div class=\\'row pad\\'>' + message + '</div> <div class=\\'row full\\'><button class=\\'yes\\'>' + actionOne + '</button></div></div>';\n\t\t\t//console.log(newDiv);\n\t\t\tdocument.querySelector('.container').appendChild(newDiv); // render div at bottom of container\n\t\t\tconsole.log('queryselector: ' + '.' + divClass +' .yes');\n\t\t\tdocument.querySelector('.' + divClass +' .yes').addEventListener('click', function(){\n\t\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\t\tconsole.log('now I\\'m closing');\n\t\t\t\t//action;\n\t\t\t\t//document.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\t\tif (actionOne == 'Continue') {\n\t\t\t\t\tif (final) {\n\t\t\t\t\t\tconsole.log('good job, you finished the game...');\n\t\t\t\t\t\treturnToMain();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextQuestion();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t}\n// end fake document ready\n}, false);\n"]}