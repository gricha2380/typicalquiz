{"version":3,"sources":["scripts.js"],"names":["document","addEventListener","doAjax","xmlhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","topicData","JSON","parse","responseText","console","log","populateTopic","open","send","watchSelectMenu","querySelector","event","preventDefault","id","expandMenu","target","classList","toggle","setTopic","selection","innerText","setDescription","spot","innerHTML","length","topicList","i","menuItems","querySelectorAll","setAttribute","onclick","topicPosition","getAttribute","watchQuiz","errorGenerator","startQuiz","quizBody","updateProgressCounter","returnToMain","progressCounter","wholePage","write","setTimeout","message","newDiv","createElement","add","appendChild","removeChild"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict'; // no sloppy JS habits allowed here.\ndocument.addEventListener('DOMContentLoaded', function(){\n\tvar topicData; // empty var to hold question JSON\n\tvar topicPosition;\n\tvar progressCounter = 1; // track number of questions asked\n\tvar score = 0; // track user's score\n\n\t// load questions and topics as soon as the page is ready\n\tfunction doAjax() {\n\t\tvar xmlhttp = new XMLHttpRequest();\n\t\tvar url = 'assets/data/topics.json';\n\n\t\txmlhttp.onreadystatechange = function() {\n\t\tif (this.readyState == 4 && this.status == 200) {\n    \t\ttopicData = JSON.parse(this.responseText);\n    \t\tconsole.log(\"Topic data, Morty\")\n    \t\tconsole.log(topicData);\n    \t\tpopulateTopic();\n    \t}\n    }\n    xmlhttp.open('GET', url, true);\n    xmlhttp.send();\n\t}\n\tdoAjax();\n\n\tfunction watchSelectMenu(){\n\t\t// open select menu\n\t\tdocument.querySelector(\"#topicMenu\").addEventListener(\"click\", function(event){\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log(\"You clicked\",this.id);\n\t\t\texpandMenu(this.id);\n\t\t});\n\n\t}\n\twatchSelectMenu();\n\n\t// when button is clicked, toggle visibility of menu items\n\tfunction expandMenu(target) {\n\t\tconsole.log(\"I am inside expandMenu\");\n\t\tconsole.log(\"#\"+target+\".dropdownList\");\n\t\tdocument.querySelector(\"#\"+target+\"+.dropdownList\").classList.toggle(\"show\");\n\n\t\t/*\n\t\tright now the menu stays open. This is as far as I got towards making it close when you click on the BG\n\t\tif (!event.target.matches(\"#\"+target+\".dropdownList a\")){\n\t\t\tdocument.querySelector(\"#\"+target+\"+.dropdownList\").classList.toggle(\"show\");\n\t\t\tconsole.log(\"make it close now\");\n\t\t}\n\t\t*/\n\n\t\t/* second try\n\t\tfor (var i = 0; i < menuItems.length; i++) {\n\t\t\tmenuItems[i].onclick = function(){\n\t\t\t\tconsole.log(\"I was clicked \"+this.innerHTML);\n\t\t\t}\n\t\t}\n\t\t*/\n\n\t\t// third try. Close if click is anythere outside the button\n\t\t// window.onclick = function(event){\n\t\t// \t// how can I have it match a click on 'this'?\n\t\t// \tif (!event.target.matches('button')){\n\t\t// \t\tdocument.querySelector(\"#\"+target+\"+.dropdownList\").classList.toggle(\"show\");\n\t\t// \t}\n\t\t// }\n\t} // end expandMenu\n\n\t// set topic contents from JSON when menu item is selected\n\tfunction setTopic(selection) {\n\t\tconsole.log(selection);\n\t\tdocument.querySelector(\"#topicMenu\").innerText = selection;\n\t\tdocument.querySelector(\"#topicMenu + .dropdownList\").classList.toggle(\"show\");\n\t\t//console.log(\"you clicked \"+selection.innerHTML);\n\t}\n\n\t// set description contents from JSON when menu item is selected\n\tfunction setDescription(spot) {\n\t\tconsole.log('this is spot', spot);\n\t\tdocument.querySelector(\"#topicRow .lowerBox\").innerHTML = topicData[spot]['description'];\n\t}\n\n\t// load topic items from JSON file\n\tfunction populateTopic() {\n\t\tconsole.log(\"this is how long topic data is\",topicData.length);\n\t\tvar topicList = '';\n\t\tvar linkOpen = '<a>';\n\t\tvar linkClose = '</a>'\n\t\tfor (var i = 0; i < topicData.length; i++) {\n\t\t\ttopicList += linkOpen + topicData[i][\"name\"] + linkClose;\n\t\t}\n\t\tdocument.querySelector(\"#topicList\").innerHTML = topicList;\n\n\t\tvar menuItems = document.querySelectorAll(\".dropdownList a\");\n\t\tconsole.log(menuItems.length,'length of menuItems');\n\t\tfor (var i = 0; i < menuItems.length; i++) {\n\t\t\t// Creates an attribute to track order. Sets it to current loop iteration value\n\t\t\tmenuItems[i].setAttribute('order', i);\n\t\t\t// onclick function for every menuItem link\n\t\t\tmenuItems[i].onclick = function(){\n\t\t\t// sends topic name to the button value\n\t\t\tsetTopic(this.innerHTML);\n\t\t\t// sends order position to description function. This pulls the corresponding description from the JSON\n\t\t\ttopicPosition = this.getAttribute('order');\n\t\t\tsetDescription(topicPosition);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction watchQuiz(){\n\t\t// start quiz when button is pressed\n\t\tdocument.querySelector('.start').addEventListener('click', function() {\n\t\t\tconsole.log(\"You pressed start\");\n\t\t\tconsole.log(document.querySelector('#topicMenu').innerText);\n\t\t\tvar topicVar = document.querySelector('#topicMenu').innerText;\n\t\t\tif (topicVar == 'Choose One') {\n\t\t\t\tconsole.log('no value!');\n\t\t\t\terrorGenerator('Please select a topic.');\n\t\t\t} else {\n\t\t\t\tstartQuiz();\n\t\t\t}\n\t\t});\n\t}\n\twatchQuiz();\n\n\t// grab quiz page body\n\tfunction startQuiz(){\n\t\t// load quiz screen via AJAX\n\t\tvar xmlhttp = new XMLHttpRequest();\n\t\tvar url = 'assets/data/questionScreen.html';\n\n\t\txmlhttp.onreadystatechange = function() {\n\t\t\tif (this.readyState == 4 && this.status == 200) {\n\t    \t\tvar quizBody = this.responseText;\n\t    \t\tdocument.querySelector('.container').innerHTML = quizBody;\n\n\t    \t\t// add code to update dynamic elements of the page\n\t\t\t\t// progress counter\n\t\t\t\tupdateProgressCounter();\n\t\t\t\t// prefill question one from current topic data\n\t\t\t\tdocument.querySelector('.questionHolder').innerHTML = topicData[topicPosition]['questions'][0]['question'];\n\n\t\t\t\t// close button\n\t\t\t\tdocument.querySelector('.close').addEventListener('click', function(){\n\t\t\t\t\t// future: make prompt function. Pass confirm box into it. Have confirm box call main screen function\n\t\t\t\t\tconsole.log('close was pressed');\n\t\t\t\t\treturnToMain();\n\t\t\t\t});\n\t\t\t}\n\t    }\n\t    xmlhttp.open('GET', url, true);\n\t    xmlhttp.send();\n\n\t} // end quiz\n\n\t// update progress and score\n\tfunction updateProgressCounter() {\n\t\tif (document.querySelector('.progress')) {\n\t\t\tdocument.querySelector('.progress').innerHTML = 'Progress: ' + progressCounter + ' / ' + topicData[topicPosition]['questions'].length;\n\t\t}\n\n\t}\n\n\tfunction returnToMain() {\n\t\tprogressCounter = 1;\n\n\t\t// load quiz screen via AJAX\n\t\tvar xmlhttp = new XMLHttpRequest();\n\t\tvar url = 'index.html';\n\n\t\txmlhttp.onreadystatechange = function() {\n\t\t\tif (this.readyState == 4 && this.status == 200) {\n\t    \t\tvar wholePage = this.responseText;\n\t    \t\tconsole.log('start fresh...');\n\t    \t\tconsole.log(wholePage,'here is my container');\n\t    \t\tdocument.write(wholePage);\n\t    \t\t//document.close();\n\t    \t\t// future: there has to be a better way than this. I'm re-calling each eventlistener when I load page contents. :-(\n\t    \t\tdoAjax();\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t//console.log('delay before hiding');\n\t\t\t\t\twatchSelectMenu();\n\t\t\t\t\twatchQuiz();\n\t\t\t\t}, 1000);\n\t\t\t}\n\t    }\n\t    xmlhttp.open('GET', url, true);\n\t    xmlhttp.send();\n\t}\n\n\tfunction errorGenerator(message) {\n\t\tvar newDiv = document.createElement('div'); // create div element\n\t\tnewDiv.classList.add('errorBox'); // apply class for manipulation & styling\n\t\tnewDiv.innerText = message; // apply message var as content of new div\n\t\tconsole.log(newDiv);\n\t\tdocument.querySelector('.container').appendChild(newDiv); // render div at bottom of container\n\t\t// delete error after 10 seconds\n\t\tsetTimeout(function() {\n\t    \tdocument.querySelector('.container').removeChild(document.querySelector('.errorBox'))\n\t    }, 5000);\n\t}\n\n// end fake document ready\n}, false);\n"]}