{"version":3,"sources":["scripts.js"],"names":["document","addEventListener","expandMenu","target","console","log","querySelector","classList","toggle","setTopic","selection","innerText","setDescription","spot","innerHTML","topicData","populateTopic","length","topicList","i","menuItems","querySelectorAll","setAttribute","onclick","this","topicPosition","getAttribute","startQuiz","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","quizBody","responseText","updateProgressCounter","modalGenerator","endQuizMessage","progressCounter","open","send","returnToMain","location","reload","errorGenerator","message","newDiv","createElement","add","appendChild","setTimeout","removeChild","actionOne","actionTwo","divClass","JSON","parse","doAjax","event","preventDefault","id"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict'; // no sloppy JS habits allowed here.\ndocument.addEventListener('DOMContentLoaded', function(){\n\tvar topicData; // empty var to hold question JSON\n\tvar topicPosition;\n\tvar progressCounter = 1; // track number of questions asked\n\tvar score = 0; // track user's score\n\tvar endQuizMessage = 'Are you sure you want to end your quiz?';\n\n\t// load questions and topics as soon as the page is ready\n\tfunction doAjax() {\n\t\tvar xmlhttp = new XMLHttpRequest();\n\t\tvar url = 'assets/data/topics.json';\n\n\t\txmlhttp.onreadystatechange = function() {\n\t\tif (this.readyState == 4 && this.status == 200) {\n    \t\ttopicData = JSON.parse(this.responseText);\n    \t\tconsole.log(\"Topic data, Morty\")\n    \t\tconsole.log(topicData);\n    \t\tpopulateTopic();\n    \t}\n    }\n    xmlhttp.open('GET', url, true);\n    xmlhttp.send();\n\t}\n\tdoAjax();\n\n\tfunction watchSelectMenu(){\n\t\t// open select menu\n\t\tdocument.querySelector(\"#topicMenu\").addEventListener(\"click\", function(event){\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log(\"You clicked\",this.id);\n\t\t\texpandMenu(this.id);\n\t\t});\n\n\t}\n\twatchSelectMenu();\n\n\t// when button is clicked, toggle visibility of menu items\n\tfunction expandMenu(target) {\n\t\tconsole.log(\"I am inside expandMenu\");\n\t\tconsole.log(\"#\"+target+\".dropdownList\");\n\t\tdocument.querySelector(\"#\"+target+\"+.dropdownList\").classList.toggle(\"show\");\n\n\t\t/*\n\t\tright now the menu stays open. This is as far as I got towards making it close when you click on the BG\n\t\tif (!event.target.matches(\"#\"+target+\".dropdownList a\")){\n\t\t\tdocument.querySelector(\"#\"+target+\"+.dropdownList\").classList.toggle(\"show\");\n\t\t\tconsole.log(\"make it close now\");\n\t\t}\n\t\t*/\n\n\t\t/* second try\n\t\tfor (var i = 0; i < menuItems.length; i++) {\n\t\t\tmenuItems[i].onclick = function(){\n\t\t\t\tconsole.log(\"I was clicked \"+this.innerHTML);\n\t\t\t}\n\t\t}\n\t\t*/\n\n\t\t// third try. Close if click is anythere outside the button\n\t\t// window.onclick = function(event){\n\t\t// \t// how can I have it match a click on 'this'?\n\t\t// \tif (!event.target.matches('button')){\n\t\t// \t\tdocument.querySelector(\"#\"+target+\"+.dropdownList\").classList.toggle(\"show\");\n\t\t// \t}\n\t\t// }\n\t} // end expandMenu\n\n\t// set topic contents from JSON when menu item is selected\n\tfunction setTopic(selection) {\n\t\tconsole.log(selection);\n\t\tdocument.querySelector(\"#topicMenu\").innerText = selection;\n\t\tdocument.querySelector(\"#topicMenu + .dropdownList\").classList.toggle(\"show\");\n\t\t//console.log(\"you clicked \"+selection.innerHTML);\n\t}\n\n\t// set description contents from JSON when menu item is selected\n\tfunction setDescription(spot) {\n\t\tconsole.log('this is spot', spot);\n\t\tdocument.querySelector(\"#topicRow .lowerBox\").innerHTML = topicData[spot]['description'];\n\t}\n\n\t// load topic items from JSON file\n\tfunction populateTopic() {\n\t\tconsole.log(\"this is how long topic data is\",topicData.length);\n\t\tvar topicList = '';\n\t\tvar linkOpen = '<a>';\n\t\tvar linkClose = '</a>'\n\t\tfor (var i = 0; i < topicData.length; i++) {\n\t\t\ttopicList += linkOpen + topicData[i][\"name\"] + linkClose;\n\t\t}\n\t\tdocument.querySelector(\"#topicList\").innerHTML = topicList;\n\n\t\tvar menuItems = document.querySelectorAll(\".dropdownList a\");\n\t\tconsole.log(menuItems.length,'length of menuItems');\n\t\tfor (var i = 0; i < menuItems.length; i++) {\n\t\t\t// Creates an attribute to track order. Sets it to current loop iteration value\n\t\t\tmenuItems[i].setAttribute('order', i);\n\t\t\t// onclick function for every menuItem link\n\t\t\tmenuItems[i].onclick = function(){\n\t\t\t// sends topic name to the button value\n\t\t\tsetTopic(this.innerHTML);\n\t\t\t// sends order position to description function. This pulls the corresponding description from the JSON\n\t\t\ttopicPosition = this.getAttribute('order');\n\t\t\tsetDescription(topicPosition);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction watchQuiz(){\n\t\t// start quiz when button is pressed\n\t\tdocument.querySelector('.start').addEventListener('click', function() {\n\t\t\tconsole.log(\"You pressed start\");\n\t\t\tconsole.log(document.querySelector('#topicMenu').innerText);\n\t\t\tvar topicVar = document.querySelector('#topicMenu').innerText;\n\t\t\tif (topicVar == 'Choose One') {\n\t\t\t\tconsole.log('no value!');\n\t\t\t\terrorGenerator('Please select a topic.');\n\t\t\t} else {\n\t\t\t\tstartQuiz();\n\t\t\t}\n\t\t});\n\t}\n\twatchQuiz();\n\n\t// grab quiz page body\n\tfunction startQuiz(){\n\t\t// load quiz screen via AJAX\n\t\tvar xmlhttp = new XMLHttpRequest();\n\t\tvar url = 'assets/data/questionScreen.html';\n\n\t\txmlhttp.onreadystatechange = function() {\n\t\t\tif (this.readyState == 4 && this.status == 200) {\n\t    \t\tvar quizBody = this.responseText;\n\t    \t\tdocument.querySelector('.container').innerHTML = quizBody;\n\n\t    \t\t// add code to update dynamic elements of the page\n\t\t\t\t// progress counter\n\t\t\t\tupdateProgressCounter();\n\t\t\t\t// prefill question one from current topic data\n\t\t\t\tdocument.querySelector('.questionHolder').innerHTML = topicData[topicPosition]['questions'][0]['question'];\n\n\t\t\t\t// close button\n\t\t\t\tdocument.querySelector('.close').addEventListener('click', function(){\n\t\t\t\t\t// future: make prompt function. Pass confirm box into it. Have confirm box call main screen function\n\t\t\t\t\tconsole.log('close was pressed');\n\t\t\t\t\tmodalGenerator(endQuizMessage, 'yes', 'no');\n\t\t\t\t});\n\n\t\t\t\tdocument.querySelector('.hint').addEventListener('click', function(){\n\t\t\t\t\tconsole.log('hint clicked');\n\t\t\t\t\tmodalGenerator(topicData[topicPosition]['questions'][0]['hint'], 'yes');\n\t\t\t\t});\n\n\t\t\t\tdocument.querySelector('.skip').addEventListener('click', function(){\n\t\t\t\t\t// keep score the same\n\t\t\t\t\t// show new question\n\t\t\t\t\tdocument.querySelector('.questionHolder').innerHTML = topicData[topicPosition]['questions'][progressCounter-1]['question'];\n\t\t\t\t\tconsole.log('progress counter',progressCounter);\n\t\t\t\t\tconsole.log('this should be a question',topicData[topicPosition]['questions'][progressCounter]['question']);\n\t\t\t\t\tupdateProgressCounter();\n\t\t\t\t\tconsole.log('progress counter',progressCounter);\n\t\t\t\t});\n\t\t\t}\n\t    }\n\t    xmlhttp.open('GET', url, true);\n\t    xmlhttp.send();\n\n\t} // end quiz\n\n\t// update progress and score\n\tfunction updateProgressCounter() {\n\t\tif (document.querySelector('.progress')) {\n\t\t\tdocument.querySelector('.progress').innerHTML = 'Progress: ' + (progressCounter) + ' / ' + topicData[topicPosition]['questions'].length;\n\t\t}\n\t\tprogressCounter++;\n\n\t}\n\n\tfunction returnToMain() {\n\t\tlocation.reload();\n\t\t// I need to do this properly or not at all...\n\t\t/*\n\t\tprogressCounter = 1;\n\n\t\t// load quiz screen via AJAX\n\t\tvar xmlhttp = new XMLHttpRequest();\n\t\tvar url = 'index.html';\n\n\t\txmlhttp.onreadystatechange = function() {\n\t\t\tif (this.readyState == 4 && this.status == 200) {\n\t    \t\tvar wholePage = this.responseText;\n\t    \t\tconsole.log('start fresh...');\n\t    \t\tconsole.log(wholePage,'here is my container');\n\t    \t\tdocument.write(wholePage);\n\t    \t\t//document.close();\n\t    \t\t// future: there has to be a better way than this. I'm re-calling each eventlistener when I load page contents. :-(\n\t    \t\tdoAjax();\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t//console.log('delay before hiding');\n\t\t\t\t\twatchSelectMenu();\n\t\t\t\t\twatchQuiz();\n\t\t\t\t}, 1000);\n\t\t\t}\n\t    }\n\t    xmlhttp.open('GET', url, true);\n\t    xmlhttp.send();\n\n\t    */\n\t}\n\n\tfunction errorGenerator(message) {\n\t\tvar divClass = 'errorBox';\n\t\tvar newDiv = document.createElement('div'); // create div element\n\t\tnewDiv.classList.add(divClass); // apply class for manipulation & styling\n\t\tnewDiv.innerText = message; // apply message var as content of new div\n\t\t//console.log(newDiv);\n\t\tdocument.querySelector('.container').appendChild(newDiv); // render div at bottom of container\n\t\t// delete error after 10 seconds\n\t\tsetTimeout(function() {\n\t    \tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t    }, 5000);\n\t}\n/*\n\tfunction modalGenerator(message, action) {\n\t\tvar divClass = 'messageBox';\n\t\tvar newDiv = document.createElement('div'); // create div element\n\t\tnewDiv.classList.add(divClass); // apply class for manipulation & styling\n\t\t//newDiv.innerText = message; // apply message var as content of new div\n\t\tnewDiv.innerHTML = message + '<div class=\\'yes\\'>Yes</div><div class=\\'no\\'>No</div>';\n\t\t//console.log(newDiv);\n\t\tdocument.querySelector('.container').appendChild(newDiv); // render div at bottom of container\n\n\t\tdocument.querySelector('.' + divClass +' .yes').addEventListener('click', function(){\n\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\tconsole.log('now I\\'m returning home');\n\t\t\t//action;\n\t\t\treturnToMain();\n\t\t});\n\t\tdocument.querySelector('.' + divClass + ' .no').addEventListener('click', function(){\n\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t});\n\t}\n*/\n\tfunction modalGenerator(message, actionOne, actionTwo) {\n\t\tvar divClass = 'messageBox';\n\t\tvar newDiv = document.createElement('div'); // create div element\n\t\tnewDiv.classList.add(divClass); // apply class for manipulation & styling\n\t\t//newDiv.innerText = message; // apply message var as content of new div\n\t\tif (actionTwo) {\n\t\t\tnewDiv.innerHTML = message + '<button class=\\'yes\\'>Yes</button><button class=\\'no\\'>No</button>';\n\t\t\t//console.log(newDiv);\n\t\t\tdocument.querySelector('.container').appendChild(newDiv); // render div at bottom of container\n\n\t\t\tdocument.querySelector('.' + divClass +' .yes').addEventListener('click', function(){\n\t\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\t\tconsole.log('now I\\'m returning home');\n\t\t\t\t//action;\n\t\t\t\treturnToMain();\n\t\t\t});\n\t\t\tdocument.querySelector('.' + divClass + ' .no').addEventListener('click', function(){\n\t\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\t});\n\t\t} else {\n\t\t\tnewDiv.innerHTML = message + '<div class=\\'row full\\'><button class=\\'yes\\'>Okay</button></div>';\n\t\t\t//console.log(newDiv);\n\t\t\tdocument.querySelector('.container').appendChild(newDiv); // render div at bottom of container\n\n\t\t\tdocument.querySelector('.' + divClass +' .yes').addEventListener('click', function(){\n\t\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\t\tconsole.log('now I\\'m closing');\n\t\t\t\t//action;\n\t\t\t\tdocument.querySelector('.container').removeChild(document.querySelector('.' + divClass));\n\t\t\t});\n\t\t}\n\n\t}\n// end fake document ready\n}, false);\n"]}